# -*- encoding : utf-8 -*-
require "benchmark"
module MinWise
  # PRIME_NUMBER = 8831
  # PAIR_RANDOM_NUMBERS = [[25038680194650428, 19741426599258878], [10838954570906809, 9728721638546335], [8510580049967807, 29991004866806237], [6524053508740739, 21442801175253240], [29087341087264849, 21209048784128121], [33568819252452684, 29768287049343279], [12374353275437022, 5793091758510272], [13236479573756113, 11732461846945482], [20512768581384297, 20026770008096457], [18354391387593702, 13146360848109492], [19406288366357968, 3796535831199482], [23230781048575381, 15431664280866628], [21994655972973823, 20512961324909702], [29772155123889765, 5250613398291911], [24106858827375154, 18325918250538620], [3725482521931007, 6378909283965375], [31296122983500116, 19699433698698751], [4010384283616738, 7200438755806151], [34974870058821524, 28191869498288019], [21248738184663186, 26191158831983810], [8982285777928332, 5090544364543801], [28108980511041414, 1343904667523930], [28381613817933153, 34463432792860705], [25413460800550568, 2240333952271985], [31818201360792103, 26104227991388182], [4916710593385472, 10470573903629628], [675425425168676, 25893481000232700], [863184366651248, 20589486634132565], [33130424171112308, 28275641826419312], [53428331746328, 18168824708960639], [18720686312965945, 1963655343027490], [15402337379126427, 17901029331613594], [19288464498864091, 19115364960454776], [3845138240783162, 35730431050253049], [30363946476018906, 21547913206824319], [1341967424735338, 35201260990076598], [20836755715527544, 12597330327858916], [14980162640881209, 14780826851594479], [19270597450448706, 7809085219687635], [34878626390553442, 4922354580949896], [5812924906311297, 12737274570919782], [15006341229949988, 19915211878814063], [18189530344820926, 10976876153906353], [7774267795968558, 3985675570975810], [36007460818464839, 33528642113215310], [25875873960016049, 19790912427366426], [17571136605014638, 5245056861239513], [17875853433075118, 5742418590078117], [26111539299016381, 23931517681769740], [2482176963852314, 22099719370395815], [26249740619587908, 23236576849640974], [30641702906455327, 17814912774078511], [25774111500855599, 19939230664260233], [3267336067101950, 408482013651894], [11536044655402638, 10992709577802287], [23569056583411251, 20842242809124671], [18711678310945371, 29388595225928140], [27886823517106211, 18515256687256593], [32348637869250977, 5950927164261501], [1330037611030334, 11777777448778552], [28181792475860910, 9721786958517287], [16229203110633886, 30067272213383107], [8589956114936998, 21374453994910196], [29144872189954665, 25803843274571987], [33290326506764271, 5450024237919761], [11979968651769045, 34639447125534170], [34784219778059880, 10766001786084619], [13584208892196162, 22688069390602191], [14890336289528228, 28122127972476352], [6417277469111172, 15888126626370413], [6117515633898335, 19862055505373119], [3010242317199129, 33863471677111806], [20018466519540759, 30721148494669357], [7194968843508731, 10938654431817217], [35140269296358486, 10573223508517073], [3554513239682447, 21325005139574616], [4119391494802499, 9021250290346965], [19365470960604543, 34461556759889975], [28668754124454243, 24556317524919365], [3794279923143321, 19241693176622425], [34698642845222917, 29169662264943031], [35865733456416808, 22822186001760647], [23042953606038194, 32385499347181160], [28734883113663318, 14548706750450931]]  
  PRIME_NUMBER = 2**55-55
  # С большими числами вылазитв Bignum
  PAIR_RANDOM_NUMBERS = [[596, 3647], [58, 7877], [186, 7505], [264, 6107], [466, 4450], [928, 7615], [701, 9565], [396, 153], [369, 3149], [988, 5915], [581, 979], [962, 4088], [950, 9642], [907, 9783], [113, 6180], [52, 5884], [294, 2612], [388, 1207], [657, 5269], [179, 5105], [427, 3097], [610, 2030], [899, 7422], [729, 1635], [726, 5607], [483, 3781], [315, 3586], [153, 8834], [923, 8153], [782, 2948], [610, 1133], [947, 881], [656, 9055], [153, 2962], [620, 6877], [706, 8798], [544, 8956], [438, 6049], [815, 4209], [163, 2823], [201, 1639], [240, 4984], [658, 8813], [557, 2978], [19, 5584], [511, 5575], [889, 6951], [112, 2180], [523, 9027], [515, 9430], [781, 189], [589, 6366], [202, 1421], [505, 3842], [895, 3630], [634, 67], [447, 2032], [551, 5474], [961, 3819], [299, 9759], [468, 6384], [447, 2788], [786, 4130], [669, 9597], [480, 5416], [394, 2745], [293, 4337], [647, 3457], [123, 2406], [830, 9952], [473, 3756], [932, 8292], [114, 4288], [261, 4910], [154, 2573], [712, 4248], [358, 6657], [235, 2629], [821, 524], [46, 4107], [998, 8404], [139, 3121], [606, 9580], [83, 8968]]
  MIN_WISE_FUNCTIONS = (0...84).map { |i| Proc.new { |x| (x * PAIR_RANDOM_NUMBERS[i][0] + PAIR_RANDOM_NUMBERS[i][1]) % PRIME_NUMBER } }
  FUNCTION_NUMBER = MIN_WISE_FUNCTIONS.size
  
  def self.find_min numbers
    raise ArgumentError unless numbers.is_a?(Array)
    mins = []
    MIN_WISE_FUNCTIONS.each do |min_wise_function|
      min = min_wise_function.call numbers.first.hex if numbers.first
      numbers.each do |number|
        current = min_wise_function.call number.hex
        min = current if min > current
      end
      mins << min
    end

    return mins
  end
end